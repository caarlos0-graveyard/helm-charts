{{- if .Values.store.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thanos.fullname" . }}-store
  labels:
    app.kubernetes.io/name: {{ include "thanos.name" . }}
    helm.sh/chart: {{ include "thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: store
spec:
  replicas: {{ .Values.store.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "thanos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: store
  template:
    metadata:
    {{- if .Values.store.deployment.annotations }}
      annotations:
{{ toYaml .Values.store.deployment.annotations | indent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "thanos.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: store
    spec:
      containers:
        - name: thanos-store
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "store"
            - "--log.level={{ .Values.store.logLevel }}"
            - "--data-dir=/var/thanos/store"
            - "--objstore.config-file=/etc/thanos-object-store/store.yaml"
            {{- with .Values.store.minTime }}
            - "--min-time={{ . }}"
            {{- end }}
            {{- with .Values.store.maxTime }}
            - "--max-time={{ . }}"
            {{- end }}
          ports:
            - name: http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            initialDelaySeconds: {{ .Values.store.liveness.initialDelaySeconds }}
            httpGet:
              path: /-/healthy
              port: http
          readinessProbe:
            initialDelaySeconds: {{ .Values.store.readiness.initialDelaySeconds }}
            httpGet:
              path: /-/ready
              port: http
          volumeMounts:
            - name: data
              mountPath: /var/thanos/store
            - name: object-store
              mountPath: /etc/thanos-object-store
          resources:
{{ toYaml .Values.store.resources | indent 12 }}
    {{- with .Values.store.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.store.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.store.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: data
        - name: object-store
          secret:
            secretName: {{ include "thanos.fullname" . }}-thanos-object-store
{{- end -}}
