{{- if .Values.compact.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thanos.fullname" . }}-compact
  labels:
    app.kubernetes.io/name: {{ include "thanos.name" . }}
    helm.sh/chart: {{ include "thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: compact
spec:
  replicas: {{ .Values.compact.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "thanos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: compact
  template:
    metadata:
    {{- if .Values.compact.deployment.annotations }}
      annotations:
{{ toYaml .Values.compact.deployment.annotations | indent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "thanos.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: compact
    spec:
      containers:
        - name: thanos-compact
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "compact"
            - "--log.level={{ .Values.compact.logLevel }}"
            - "--data-dir=/var/thanos/compact"
            - "--retention.resolution-raw={{ .Values.compact.retentionResolutionRaw }}"
            - "--retention.resolution-5m={{ .Values.compact.retentionResolution5m }}"
            - "--retention.resolution-1h={{ .Values.compact.retentionResolution1h }}"
            - "--objstore.config-file=/etc/thanos-object-store/store.yaml"
            {{- if .Values.compact.wait }}
            - "--wait"
            {{- end }}
            {{- with .Values.compact.maxCompactionLevel }}
            - "--debug.max-compaction-level={{ . }}"
            {{- end }}
          ports:
            - name: http
              containerPort: 10902
          volumeMounts:
            - name: data
              mountPath: /var/thanos/compact
            - name: object-store
              mountPath: /etc/thanos-object-store
          resources:
{{ toYaml .Values.compact.resources | indent 12 }}
    {{- with .Values.compact.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.compact.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.compact.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: data
        - name: object-store
          secret:
            secretName: {{ include "thanos.fullname" . }}-thanos-object-store
{{- end -}}
